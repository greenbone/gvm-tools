# -*- coding: utf-8 -*-
# Description:
# Script for gvm-pyshell
#
# Authors:
# Raphael Grewe <raphael.grewe@greenbone.net>
#
# Copyright:
# Copyright (C) 2017 Greenbone Networks GmbH
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

from lxml.etree import tostring

len_args = len(args.script) - 1
if len_args is not 5:
    message = """
    This script pulls data from a GSM and feeds it into another one as \
Container task
    It needs five parameters after the script name.

    1. <from-task>
    2. <to-gsm>
    3. <to-task>
    4. <to-gsm-username>
    5. <to-gsm-password>

    Example:
        $ gvm-pyshell ssh --hostname <from-gsm> --gmp-username name \
--gmp-password pass scripts/SyncReports.gmp <from-task> <to-gsm> \
<to-task> <to-gsm-username> <to-gsm-password>
    """
    print(message)
    quit()

from_gsm = args.hostname
from_task = args.script[1]
to_gsm = args.script[2]
to_task = args.script[3]
to_user = args.script[4]
to_pass = args.script[5]

print('Sync reports from %s task %s to %s in container %s' %
      (from_gsm, from_task, to_gsm, to_task))
print('Retrieve reports from task: %s' % from_task)

# Retrieve the reports from the task of the first gsm
from_reports = gmp.get_reports(report_filter="task_id=%s" % from_task)
list_to_copy = from_reports.xpath('report/name/text()')

print('\nFound %i reports\n' % len(list_to_copy))

to_gsm = SSHConnection(hostname=to_gsm, port=22,
                       timeout=5, ssh_user='gmp',
                       ssh_password='', shell_mode=True)

# Authenticate on second gsm
auth = to_gsm.authenticate(to_user, to_pass)

# Retrieve the reports from the task of the second gsm
to_reports = to_gsm.get_reports(report_filter="task_id=%s" % to_task)
list_of_reports_that_exist = to_reports.xpath('report/name/text()')
print('%i reports exist in ContainerTask: %s' %
      (len(list_of_reports_that_exist), to_task))

list_of_reports_that_will_be_uploaded = []

# Compare the names of the reports
for report in from_reports.xpath('report'):
    name = report.xpath('name/text()')[0]
    if name not in list_of_reports_that_exist:
        list_of_reports_that_will_be_uploaded.append(report)

# Upload all remaining reports
for report in list_of_reports_that_will_be_uploaded:
    report_xml = tostring(report).decode('utf-8')
    print('report uploaded')
    to_gsm.create_report(report_xml, task_id=to_task)

if not list_of_reports_that_will_be_uploaded:
    print('Tasks are sync')
