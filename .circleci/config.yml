version: 2.1

executors:
  python-35:
    docker:
      - image: circleci/python:3.5
    working_directory: ~/repo
  python-36:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/repo
  python-37:
    docker:
      - image: circleci/python:3.7
    working_directory: ~/repo
  python-38:
    docker:
      - image: circleci/python:3.8
    working_directory: ~/repo

commands:
  build:
    description: "Download and build"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: poetry install --no-dev
  build-docs:
    description: "Download and build the documentation"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: poetry install
      - run:
          name: Build docs
          command: cd docs && poetry run make html
  test:
    description: "Download and run tests"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: poetry install --no-dev
      - run:
          name: Run unit tests
          command: poetry run python -m unittest
  test-with-codecov:
    description: "Download and run tests with code coverage"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: poetry install
      - run:
          name: Install codecov
          command: poetry run pip install codecov
      - run:
          name: Run unit tests
          command: poetry run coverage run -m unittest
      - run:
          name: Upload coverage to Codecov
          command: poetry run codecov
  lint:
    description: "Lint python files"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: poetry install
      - run:
          name: Check with black
          command: poetry run black --check gvmtools
      - run:
          name: Run pylint
          command: poetry run pylint --score=n --disable=R gvmtools
      - run:
          name: Check version information
          command: poetry run python -m pontos.version verify current
      - run:
          name: Check MyPy
          command: poetry run pip install mypy==0.770  # Pinned version avoids surprises
      - run:
          name: Run MyPy
          command: poetry run mypy -m gvmtools
  lint-scripts:
    description: "Lint GVM scripts"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: poetry install
      - run:
          name: Install additional script dependencies
          command: poetry run pip install -r scripts/requirements.txt
      - run:
          name: Check with black
          command: poetry run black --check scripts/*.gmp.py
      - run:
          name: Run pylint
          command: |
            poetry run pylint --rcfile=scripts/.pylintrc --disable=R --ignore=requirements.txt scripts/*.py
  deploy:
    description: "Upload package to PyPI"
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: poetry install
      - run:
          name: Verify tag version
          command: poetry run python -m pontos.version verify ${CIRCLE_TAG}
      - run:
          name: Install twine
          command: poetry run pip install twine
      - run:
          name: Initialize .pypirc
          command: |
            echo -e "[distutils]" > ~/.pypirc
            echo -e "index-servers = pypi" >> ~/.pypirc
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = __token__" >> ~/.pypirc
            echo -e "password = $PYPI_TOKEN" >> ~/.pypirc
      - run:
          name: Create and upload distribution to pypi
          command: |
            rm -rf dist build gvm_tools.egg-info
            poetry build
            poetry run twine upload dist/*

jobs:
  lint-python-files:
    executor: python-38
    steps:
      - lint
  lint-gvm-scripts:
    executor: python-38
    steps:
      - lint-scripts
  build-documentation:
    executor: python-38
    steps:
      - build-docs
  build-35:
    executor: python-35
    steps:
      - build
  test-35:
    executor: python-35
    steps:
      - test
  build-36:
    executor: python-36
    steps:
      - build
  test-36:
    executor: python-36
    steps:
      - test
  build-37:
    executor: python-37
    steps:
      - build
  test-37:
    executor: python-37
    steps:
      - test-with-codecov
  deploy-37:
    executor: python-37
    steps:
      - deploy
  build-38:
    executor: python-38
    steps:
      - build
  test-38:
    executor: python-38
    steps:
      - test

workflows:
  version: 2
  build_and_test:
    jobs:
      - lint-python-files
      - lint-gvm-scripts
      - build-documentation
      - build-35
      - test-35
      - build-36
      - test-36
      - build-37
      - test-37
      - build-38
      - test-38
  build_and_deploy:
    jobs:
      - build-37:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - deploy-37:
          requires:
            - build-37
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
